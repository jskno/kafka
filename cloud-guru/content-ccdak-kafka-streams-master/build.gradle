plugins {
    id 'application'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.kafka:kafka-streams:3.8.0'
    implementation 'org.apache.kafka:kafka-clients:3.8.0'

    //jackson for custom serdes
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.1'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.14.1'

    // logging
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'org.slf4j:slf4j-simple:1.7.30'

    testImplementation 'junit:junit:4.12'
}

application {
    mainClassName = 'com.linuxacademy.ccdak.streams.StreamsMain'
}

task(runStreams, dependsOn: 'classes', type: JavaExec) {
   main = 'com.linuxacademy.ccdak.streams.StreamsMain'
   classpath = sourceSets.main.runtimeClasspath
}

task(runAggregations, dependsOn: 'classes', type: JavaExec) {
   main = 'com.linuxacademy.ccdak.streams.AggregationsMain'
   classpath = sourceSets.main.runtimeClasspath
}

task(runJoins, dependsOn: 'classes', type: JavaExec) {
   main = 'com.linuxacademy.ccdak.streams.JoinsMain'
   classpath = sourceSets.main.runtimeClasspath
}

task(runStatelessTransformations, dependsOn: 'classes', type: JavaExec) {
   main = 'com.linuxacademy.ccdak.streams.StatelessTransformationsMain'
   classpath = sourceSets.main.runtimeClasspath
}

task(runWindowing, dependsOn: 'classes', type: JavaExec) {
   main = 'com.linuxacademy.ccdak.streams.WindowingMain'
   classpath = sourceSets.main.runtimeClasspath
}
